{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","reportWebVitals.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","length","cats","type","value","onChange","target","getGift","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","GifGridItem","className","src","alt","GifGrid","GifExpertApp","categories","cat","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"mMAiCeA,EA9BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACHC,mBAAS,IADN,mBAChCC,EADgC,KACpBC,EADoB,KAevC,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACCJ,EAAWK,OAAS,IACrBP,GAAc,SAAAQ,GAAI,OAAKN,GAAL,mBAAoBM,OACtCL,EAAc,MAKhB,SACE,uBACEM,KAAK,OACLC,MAAOR,EACPS,SAjBoB,SAACN,GACzBF,EAAcE,EAAEO,OAAOF,a,+BCQZG,EAfF,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACNC,EADM,iDAC0CC,UAAUH,GADpD,+DAEWI,MAAMF,GAFjB,cAENG,EAFM,gBAGSA,EAASC,OAHlB,uBAGLC,EAHK,EAGLA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAM,CACJC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAR1B,kBAYJM,GAZI,4CAAH,sDCuBEO,EApBM,SAACf,GAAc,IAAD,EACPb,mBAAS,CACjCoB,KAAM,GACNS,SAAS,IAHsB,mBAC1BC,EAD0B,KACnBC,EADmB,KAiBjC,OAXAC,qBAAU,WAERpB,EAAQC,GACLoB,MAAK,SAAAC,GACJH,EAAS,CACPX,KAAMc,EACNL,SAAS,SAGd,CAAChB,IAEGiB,GCPMK,G,MAVK,SAAC,GAAqB,EAApBX,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAE/B,OACE,sBAAKqB,UAAU,yCAAf,UACE,qBAAKC,IAAKtB,EAAKuB,IAAKb,IACpB,4BAAIA,SCkBKc,EAtBC,SAAC,GAAgB,IAAf1B,EAAc,EAAdA,SAAc,EAECe,EAAaf,GAAhCa,EAFkB,EAEvBN,KAAaS,EAFU,EAEVA,QAEpB,OACE,qCACE,oBAAIO,UAAU,oCAAd,SAAmDvB,IAElDgB,GAAW,mBAAGO,UAAU,mCAAb,yBAEZ,qBAAKA,UAAU,YAAf,SACKV,EAAOJ,KAAI,SAACC,GACX,OACE,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aCbrB,SAASgB,IAAc,MAGAxC,mBAAS,CAAC,cAHV,mBAG7ByC,EAH6B,KAGjB1C,EAHiB,KASpC,OACE,qCACE,8CAGA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEI0C,EAAWnB,KAAI,SAACoB,GAAD,OACZ,cAAC,EAAD,CAAS7B,SAAU6B,GAAUA,W,UCX3BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAACZ,EAAD,IACAa,SAASC,eAAe,SAM1BX,M","file":"static/js/main.55de057d.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from \"prop-types\";\n\nconst AddCategory = ({setcategories}) => {\n  const [inputValue, setInputValue] = useState(\"\")\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if(inputValue.length > 2){\n      setcategories(cats => [inputValue, ...cats]);\n      setInputValue(\"\");\n    }\n  }\n\n  return(\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={handleInputChange}\n        />\n    </form>\n  )\n}\n\nAddCategory.propTypes = {\n  setcategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory\n","const getGift = async(category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=TwSGE88MGTHzouv4WlkaR835lHXPWjL1`;\n    const response = await fetch(url);\n    const {data} = await response.json();\n    const gifs = data.map(img => {\n      return{\n        id: img.id,\n        title: img.title,\n        url: img.images?.downsized_medium.url\n      }\n    });\n\n    return (gifs);\n}\n\nexport default getGift;\n","import {useEffect, useState} from 'react'\nimport getGift from '../helpers/getGifs';\n\nconst useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true\n  });\n\n  useEffect(() => {\n\n    getGift(category)\n      .then(imgs => {\n        setState({\n          data: imgs,\n          loading: false\n        });\n      })\n  }, [category])\n\n  return state;\n}\n\nexport default useFetchGifs\n","import React from 'react'\nimport \"animate.css\"\n\nconst GifGridItem = ({id, title, url}) => {\n\n  return (\n    <div className=\"card animate__animated animate__fadeIn\">\n      <img src={url} alt={title}/>\n      <p>{title}</p>\n    </div>\n  )\n}\n\nexport default GifGridItem\n","import React from 'react'\nimport useFetchGifs from '../hooks/useFetchGifs'\nimport GifGridItem from './GifGridItem';\n\nconst GifGrid = ({category}) => {\n\n  const {data:images, loading} = useFetchGifs(category);\n\n  return (\n    <>\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n\n      {loading && <p className=\"animate__animated animate__flash\">Loading....</p>}\n\n      <div className=\"card-grid\">\n          {images.map((img) => {\n            return(\n              <GifGridItem key={img.id} {...img}/>\n            )\n          })}\n      </div>\n\n    </>\n  )\n}\n\nexport default GifGrid\n","import {useState} from \"react\";\nimport AddCategory from \"./components/AddCategory\";\nimport GifGrid from \"./components/GifGrid\"\n\nexport default function GifExpertApp(){\n\n  //const categories = [\"One Puch\", \"Samurai X\", \"Dragon Ball\"];\n  const [categories, setcategories] = useState([\"Samurai X\"])\n\n  // function HandleAdd(){\n    // //setcategories([...categories, \"HunterXHunter\"]);\n    // setcategories(cats => [...cats, 'HunterXHunter'])\n  // }\n  return(\n    <>\n      <h2>\n        GifExpertApp\n      </h2>\n      <AddCategory setcategories={setcategories} />\n      <hr/>\n      <ol>\n        {\n          categories.map((cat)=> (\n             <GifGrid category={cat} key={cat}/>\n        ))\n        }\n      </ol>\n    </>\n  )\n}\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}